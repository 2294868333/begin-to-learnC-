/* *******************************************************************
								数组
数组，就是就是一个集合，里边存放了相同数据类型的元素
特点：
1.数组中的每一个数据元素都是相同的数据类型
2.数组是由连续的内存位置组成的

一维数组
一维数组的定义方式：
1. 数据类型 数组名[ 数组长度 ] ;
2. 数据类型 数组名[ 数组长度 ] = {值1,值2,值3.....} ;
3. 数据类型 数组名[ ] = {值1,值2,值3.....} ;

注意： 1.数组的命名规范与变量名命名规范一致，不要和变量重名
       2.数组中下标是从0开始索引的

一维数组数组名
一维数组名称的用途：
1.可以统计整个数组在内存中的长度
2.可以获取数组在内存中的首地址

注意： 数组名是常量，不可以赋值。
********************************************************************* */

#include <iostream>
using namespace std;
int main()
{
	/*
	//1. 数据类型 数组名[ 数组长度 ] ;
     int student[10];
	//利用下标赋值
	student[0] = 10;
	student[1] = 20;
	student[2] = 30;
	student[3] = 40;
	//利用下标输出
	cout << student[0] << endl;
	cout << student[1] << endl;
	cout << student[2] << endl;
	cout << student[3] << endl;
	*/
	
	/*
	//2. 数据类型 数组名[ 数组长度 ] = {值1,值2,值3.....} ;
	int socre[10] = { 10,20,30,40,50,60,70,80,90,100 };
	//逐个输出太麻烦 利用循环输出数组
	for (int i = 0; i < 10; i++)
	{
		cout << socre[i] << endl;
	}
	*/

	/*
	//3. 数据类型 数组名[ ] = {值1,值2,值3.....} ;
	int socre1[] = { 10,20,30,14 };
	for (int i = 0; i < 4; i++)
	{
		cout << socre1[i] << endl;
	}
	*/
	
	//数组名用途
	//1.可以获取整个数组占用内存空间大小
	int arr[10] = { 1,2,3,4,5,6,7,8,9,10 };

	cout << "整个数组所占用内存空间大小：" << sizeof(arr) << endl;
	cout << "单个元素所占用的内存大小：" << sizeof(arr[0]) << endl;
	cout << "数组中的元素个数：" << sizeof(arr) / sizeof(arr[0]) << endl;

	//2.可以通过数组名获取数组在内存中的首地址
	cout << "数组首地址为：" << (int)arr << endl;
	cout << "数组中单个元素的地址：" << (int) & arr[0] << endl;
	cout << "数组中单个元素的地址：" << (int)& arr[1] << endl;
	system("pause");
	return 0;
}




