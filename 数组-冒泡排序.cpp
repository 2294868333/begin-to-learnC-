/* ***************************************************************************
									冒泡排序
作用： 最常用的排序算法，对数组内元素进行排序
步骤：
1.比较相邻的元素，如果第一个比第二个大，就交换他们两个。
2.对每一对相邻元素做相同的工作，执行完毕后，找到第一个最大值。
3.重复以上的步骤，每次比较次数-1，直到不需要比较。

语法：
排序总轮数 = 元素个数 - 1 
每轮对比次数 = 元素个数 - 排序轮数 - 1 
**************************************************************************** */

#include<iostream>
using namespace std;
int main()
{
	//利用冒泡排序实现升序序列
	int arr[] = { 0,5,1,3,2,9,8,4,6,7 };
	cout << "排序前:";
	for (int i = 0; i < 10; i++)
	{
		cout << arr[i] << ' ';
	}
	cout << endl;
	//开始冒泡排序
	//外层循环   排序总轮数 = 元素个数 - 1 
	for (int i = 0; i < 10 - 1; i++)
	{
		//外层循环    每轮对比次数 = 元素个数 - 排序轮数 - 1 
		for (int j = 0; j < 10 - i - 1; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				int temp = arr[j]; arr[j] = arr[j + 1]; arr[j + 1] = temp;
			}
		}
	}
	//输出排序后
	cout << "排序后:";
	for (int i = 0 ; i < 10; i++)
	{
		cout << arr[i] << ' ';
	}
	cout << endl;
	system("pause");
	return 0;
}